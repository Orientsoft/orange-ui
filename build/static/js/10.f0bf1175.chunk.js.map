{"version":3,"sources":["pages/article/commonArticle/index.js","pages/article/meal/index.js","pages/article/service.js","components/comTable/index.js","components/previewModal/index.js","components/formModal/index.js"],"names":["typeCfg","class","diagnosis","disease","meal","CommonArticle","p","getPageData","getArticleList","props","type","state","current","then","res","status","setState","dataSource","data","total","catch","e","console","log","onChangePage","page","openAdd","visible","mode","initData","openEdit","record","onCancel","onSubmit","v","logo","skilled","message","error","length","editHandle","addHandle","addArticleList","content","toHTML","editArticleList","id","onDelete","deleteArticleList","showPreview","url","renderMode","previewVisible","previewImage","previewHandleCancel","showContentPreview","draft","getArticleInfo","initKeys","formCfg","label","key","rules","required","selectOptions","getLabelList","this","tmp","map","value","name","text","title","dataIndex","align","render","join","onClick","src","alt","style","height","className","width","marginRight","onConfirm","columns","handleCancel","React","Component","ClassArticle","Fetch","getPlatformNewsList","getNewsInfo","getHospitalNewsList","getHospitalList","addNews","editNews","deleteNews","Home","marginTop","bordered","pagination","rowKey","getRowKey","size","onChange","float","PreviewModal","footer","minHeight","dangerouslySetInnerHTML","__html","Option","Select","formItemLayout","labelCol","xs","span","sm","wrapperCol","uploadButton","fieldNamesCfg","children","Form","create","otherValues","mapInit2","setTimeout","document","getElementById","AMap","Map","zoom","AMapUI","loadUI","PoiPicker","poiPicker","input","marker","Marker","on","poiResult","item","location","setMap","setPosition","longitude","lng","latitude","lat","handleChange","info","file","response","success","onCreate","form","validateFields","err","values","target","addLabel","slice","push","confirm","filter","renderFormItem","appStatus","store","getState","getFieldDecorator","Item","initialValue","format","treeData","placeholder","allowClear","selectOption","fieldNames","options","action","baseUrl","headers","AccessToken","token","showUploadList","beforeUpload","listType","marginBottom","BraftEditor","createEditorState","validateTrigger","validator","_","callback","isEmpty","okText","cancelText","defaultValue","preProps","i","pic","onOk","layout","defaultProps"],"mappings":"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","file":"static/js/10.f0bf1175.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Popconfirm, message } from \"antd\";\r\nimport ComTable from \"../../../components/comTable\";\r\nimport FormModal from \"../../../components/formModal\";\r\nimport PreviewModal from \"../../../components/previewModal\";\r\nimport {\r\n  getArticleList,\r\n  deleteArticleList,\r\n  addArticleList,\r\n  editArticleList,\r\n  getLabelList,\r\n  getArticleInfo,\r\n} from \"../service\";\r\n\r\nconst typeCfg = {\r\n  class: \"名师讲堂\",\r\n  diagnosis: \"健康自诊\",\r\n  disease: \"常见疾病\",\r\n  meal: \"营养餐\"\r\n};\r\n\r\nexport default class CommonArticle extends React.Component {\r\n  constructor(p) {\r\n    super(p);\r\n    this.state = {\r\n      renderMode: \"\",\r\n      previewVisible: false,\r\n      previewImage: \"\",\r\n      mode: \"\",\r\n      visible: false,\r\n      current: 1,\r\n      total: 0,\r\n      dataSource: [],\r\n      initKeys: [\"logo\", \"skilled\"],\r\n      formCfg: [\r\n        {\r\n          label: \"标题\",\r\n          key: \"name\",\r\n          rules: [{ required: true, message: \"请输入标题!\" }],\r\n          type: \"input\"\r\n        },\r\n        {\r\n          label: \"描述\",\r\n          key: \"desc\",\r\n          rules: [{ required: true, message: \"请输入描述!\" }],\r\n          type: \"input\"\r\n        },\r\n        {\r\n          label: \"标签\",\r\n          key: \"tag\",\r\n          rules: [{ required: true, message: \"请选择标签!\" }],\r\n          type: \"multipleSelect\",\r\n          selectOptions: []\r\n        },\r\n        {\r\n          label: \"LOGO\",\r\n          key: \"logo\",\r\n          rules: [{ required: true, message: \"请上传LOGO!\" }],\r\n          type: \"upload\"\r\n        },\r\n        {\r\n          label: \"文章内容\",\r\n          key: \"content\",\r\n          rules: [{ required: true, message: \"请输入文章名称!\" }],\r\n          type: \"braftEditor\"\r\n        }\r\n      ],\r\n      initData: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    getLabelList(typeCfg[this.props.type])\r\n      .then(res => {\r\n        if (res.status === 1) {\r\n          const tmp = this.state.formCfg.map(v => ({ ...v }));\r\n          tmp[2].selectOptions = res.data.map(v => ({\r\n            value: v.name,\r\n            text: v.name\r\n          }));\r\n          this.setState({ formCfg: tmp });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    this.getPageData();\r\n  }\r\n  getPageData = () => {\r\n    getArticleList(this.props.type, this.state.current)\r\n      .then(res => {\r\n        if (res.status === 1) {\r\n          this.setState({ dataSource: res.data, total: res.total });\r\n          return;\r\n        }\r\n        this.setState({ dataSource: [] });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  onChangePage = page => {\r\n    this.setState(\r\n      {\r\n        current: page\r\n      },\r\n      () => {\r\n        this.getPageData();\r\n      }\r\n    );\r\n  };\r\n  openAdd = () => {\r\n    this.setState({\r\n      visible: true,\r\n      mode: \"add\",\r\n      initData: {}\r\n    });\r\n  };\r\n  openEdit = record => () => {\r\n    this.setState({\r\n      visible: true,\r\n      mode: \"edit\",\r\n      initData: record\r\n    });\r\n  };\r\n  onCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      initData: {},\r\n      mode: \"\"\r\n    });\r\n  };\r\n  onSubmit = v => {\r\n    console.log(\"v\", v);\r\n    if (!v.logo) {\r\n      message.error(\"请上传图片\");\r\n      return;\r\n    }\r\n    if(this.props.type === 'class'){\r\n      if (!v.skilled){\r\n        message.error('请添加擅长能力');\r\n        return;\r\n      }\r\n      if (v.skilled.length === 0) {\r\n        message.error('请添加擅长能力');\r\n        return;\r\n      }\r\n    }\r\n    if (this.state.mode === \"add\") {\r\n      this.addHandle(v);\r\n      return;\r\n    }\r\n\r\n    this.editHandle(v);\r\n  };\r\n  addHandle = v => {\r\n    addArticleList(this.props.type, {\r\n      ...v,\r\n      content: v.content.toHTML()\r\n    })\r\n      .then(res => {\r\n        if (res.status === 1) {\r\n          this.onCancel();\r\n          this.getPageData();\r\n          return;\r\n        }\r\n        message.error(\"添加失败\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  editHandle = v => {\r\n    editArticleList(this.props.type, this.state.initData.id, {\r\n      ...v,\r\n      content: v.content.toHTML()\r\n    })\r\n      .then(res => {\r\n        if (res.status === 1) {\r\n          this.onCancel();\r\n          this.getPageData();\r\n          return;\r\n        }\r\n        message.error(\"修改失败\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  onDelete = id => () => {\r\n    deleteArticleList(this.props.type, id)\r\n      .then(res => {\r\n        if (res.status === 1) {\r\n          this.getPageData();\r\n          return;\r\n        }\r\n        message.error(\"删除失败\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  showPreview = (url, renderMode) => () => {\r\n    this.setState({ previewVisible: true, previewImage: url, renderMode });\r\n  };\r\n  previewHandleCancel = () => {\r\n    this.setState({ previewVisible: false, previewImage: \"\" });\r\n  };\r\n  showContentPreview = (id, draft) => () => {\r\n    this.setState({ previewVisible: true, renderMode: draft, });\r\n    getArticleInfo(this.props.type, id)\r\n    .then((res) => {\r\n      if(res.status === 1){\r\n        this.setState({\r\n          previewVisible: true,\r\n          previewImage: res.data.content,\r\n          renderMode: draft,\r\n        });\r\n        return;\r\n      }\r\n      this.setState({\r\n        previewVisible: true,\r\n        previewImage: '',\r\n        renderMode: draft,\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n  render() {\r\n    const tmp = [\r\n      {\r\n        title: \"标题\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"标签\",\r\n        dataIndex: \"tag\",\r\n        key: \"tag\",\r\n        align: \"center\",\r\n        render: v => {\r\n          if (!v) {\r\n            return null;\r\n          }\r\n          return v.join(\"、\");\r\n        }\r\n      },\r\n      {\r\n        title: \"LOGO\",\r\n        dataIndex: \"logo\",\r\n        key: \"logo\",\r\n        align: \"center\",\r\n        render: text => {\r\n          return (\r\n            <img\r\n              onClick={this.showPreview(text)}\r\n              src={text}\r\n              alt=\"\"\r\n              style={{ height: \"20px\" }}\r\n              className=\"canClick\"\r\n            />\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"描述\",\r\n        dataIndex: \"desc\",\r\n        key: \"desc\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"文章内容\",\r\n        dataIndex: \"content\",\r\n        key: \"content\",\r\n        align: \"center\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span\r\n              className=\"canClick\"\r\n              onClick={this.showContentPreview(record.id, \"draft\")}\r\n            >\r\n              详情\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"action\",\r\n        key: \"action\",\r\n        align: \"center\",\r\n        width: 200,\r\n        render: (v, record) => {\r\n          return (\r\n            <span>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginRight: \"16px\" }}\r\n                onClick={this.openEdit(record)}\r\n              >\r\n                修改\r\n              </Button>\r\n              <Popconfirm\r\n                title=\"确定删除？\"\r\n                onConfirm={this.onDelete(record.id)}\r\n              >\r\n                <Button type=\"danger\">删除</Button>\r\n              </Popconfirm>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n    const extra = [\r\n      {\r\n        title: \"医生\",\r\n        dataIndex: \"doctor\",\r\n        key: \"doctor\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"擅长能力\",\r\n        dataIndex: \"skilled\",\r\n        key: \"skilled\",\r\n        align: \"center\",\r\n        render: v => {\r\n          if (!v) {\r\n            return null;\r\n          }\r\n          return v.join('、');\r\n        }\r\n      },\r\n    ];\r\n    const extraForm = [\r\n      {\r\n        label: \"医生\",\r\n        key: \"doctor\",\r\n        rules: [{ required: true, message: \"请输入医生!\" }],\r\n        type: \"input\"\r\n      },\r\n      {\r\n        label: \"擅长能力\",\r\n        key: \"skilled\",\r\n        rules: [{ required: true, message: \"请添加擅长能力!\" }],\r\n        type: \"tagInput\"\r\n      },\r\n    ];\r\n    let columns = tmp;\r\n    let formCfg = this.state.formCfg;\r\n    if(this.props.type === 'class'){\r\n      columns = [...extra, ...tmp];\r\n      formCfg = [...extraForm, ...this.state.formCfg];\r\n    }\r\n    return (\r\n      <div>\r\n        <Button type=\"primary\" onClick={this.openAdd}>\r\n          添加\r\n        </Button>\r\n        <ComTable\r\n          current={this.state.current}\r\n          total={this.state.total}\r\n          columns={columns}\r\n          dataSource={this.state.dataSource}\r\n          onChangePage={this.onChangePage}\r\n        />\r\n        <FormModal\r\n          title={this.state.mode === \"add\" ? \"添加\" : \"修改\"}\r\n          visible={this.state.visible}\r\n          formCfg={formCfg}\r\n          initData={this.state.initData}\r\n          onCancel={this.onCancel}\r\n          onSubmit={this.onSubmit}\r\n          width={1024}\r\n          initKeys={this.state.initKeys}\r\n        />\r\n        <PreviewModal\r\n          previewVisible={this.state.previewVisible}\r\n          previewImage={this.state.previewImage}\r\n          handleCancel={this.previewHandleCancel}\r\n          renderMode={this.state.renderMode}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CommonArticle from '../commonArticle';\r\n\r\nexport default class ClassArticle extends React.Component {\r\n    render(){\r\n        return (<div>\r\n                <CommonArticle type='meal' />\r\n        </div>)\r\n    }\r\n}","import Fetch from '../../utils/fetch';\r\n\r\nexport function getLabelList(type) {\r\n    return Fetch('get', `/tag?type=${type}`);\r\n}\r\n\r\nexport function getArticleList(type, page) {\r\n    return Fetch('get', `/${type}?page=${page}&limit=10`);\r\n}\r\n\r\nexport function getArticleInfo(type, id) {\r\n    return Fetch('get', `/${type}/${id}`);\r\n}\r\n\r\nexport function addArticleList(type, data) {\r\n    return Fetch('post', `/${type}`, data);\r\n}\r\n\r\nexport function editArticleList(type, id, data) {\r\n    return Fetch('put', `/${type}/${id}`, data);\r\n}\r\n\r\nexport function deleteArticleList(type, id) {\r\n    return Fetch('delete', `/${type}/${id}`);\r\n}\r\n\r\nexport function getPlatformNewsList(page) {\r\n    return Fetch('get', `/news?page=${page}&limit=10`);\r\n}\r\n\r\nexport function getNewsInfo(id) {\r\n    return Fetch('get', `/news/${id}`);\r\n}\r\n\r\nexport function getHospitalNewsList(page) {\r\n    return Fetch('get', `/news/hospital?page=${page}&limit=10`);\r\n}\r\n\r\nexport function getHospitalList() {\r\n    return Fetch('get', '/hospital/hospitalAdmin?page=1&limit=1000');\r\n}\r\n\r\nexport function addNews(data) {\r\n    return Fetch('post', '/news', data);\r\n}\r\n\r\nexport function editNews(id, data) {\r\n    return Fetch('put', `/news/${id}`, data);\r\n}\r\n\r\nexport function deleteNews(id) {\r\n    return Fetch('delete', `/news/${id}`);\r\n}","import React from 'react';\r\nimport { Table, Pagination } from 'antd';\r\nimport { getRowKey } from '../../utils/util';\r\n\r\nexport default class Home extends React.Component {\r\n    render(){\r\n        const { columns, dataSource, current, total, onChangePage } = this.props;\r\n        console.log('total', total);\r\n        return (<div style={{ marginTop: '16px' }}>\r\n        <Table\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={false}\r\n          rowKey={getRowKey}\r\n          size=\"small\"\r\n        />\r\n        <div className='clearfix'>\r\n        <Pagination\r\n          current={current}\r\n          total={total}\r\n          // pageSize={2}\r\n          onChange={onChangePage}\r\n          style={{ float: 'right', marginTop: '16px' }}\r\n        />\r\n        </div>\r\n        </div>)\r\n    }\r\n}","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nexport default class PreviewModal extends React.Component {\r\n  render() {\r\n    const {\r\n      previewVisible,\r\n      previewImage,\r\n      handleCancel,\r\n      renderMode\r\n    } = this.props;\r\n    console.log(\"renderMode\", renderMode);\r\n    return (\r\n      <Modal\r\n        visible={previewVisible}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n        title=\"预览\"\r\n        width={1024}\r\n      >\r\n        <div className=\"clearfix\">\r\n          {renderMode === \"draft\" ? (\r\n            <div\r\n              style={{ minHeight: '700px' }}\r\n              dangerouslySetInnerHTML={{\r\n                __html: previewImage\r\n              }}\r\n            ></div>\r\n          ) : (\r\n            <img\r\n              alt=\"example\"\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n              src={previewImage}\r\n            />\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import 'braft-editor/dist/index.css'\r\nimport React from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Select,\r\n  Upload,\r\n  Icon,\r\n  Cascader,\r\n  TimePicker,\r\n  message,\r\n  TreeSelect,\r\n  Button,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport BraftEditor from 'braft-editor'\r\nimport { beforeUpload } from \"../../utils/util\";\r\nimport { baseUrl } from \"../../config/http\";\r\nimport store from '../../store/store';\r\n\r\nconst { Option } = Select;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 }\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 }\r\n  }\r\n};\r\n\r\nconst uploadButton = (\r\n  <div>\r\n    <Icon type=\"plus\" />\r\n    <div className=\"ant-upload-text\">Upload</div>\r\n  </div>\r\n);\r\n\r\nconst fieldNamesCfg = { label: \"label\", value: \"value\", children: \"children\" };\r\n// const controls = ['bold', 'italic', 'underline', 'text-color', 'separator', 'link', 'separator', 'media' ];\r\n\r\nexport default Form.create({ name: \"form_modal\" })(\r\n  class FormModal extends React.Component {\r\n    static defaultProps = {\r\n      initKeys: [],\r\n    }\r\n    state = {\r\n      otherValues: {}\r\n    };\r\n    componentDidUpdate(preProps) {\r\n      if (this.props.visible !== preProps.visible && !preProps.visible) {\r\n        const tmp = {};\r\n        const { initKeys } = this.props;\r\n        for( let i = 0; i < initKeys.length; i += 1){\r\n          tmp[initKeys[i]] = this.props.initData[initKeys[i]];\r\n        }\r\n        this.setState({ otherValues: { \r\n          latitude: this.props.initData.latitude,\r\n          longitude: this.props.initData.longitude,\r\n          pic: this.props.initData.pic,\r\n          ...tmp,\r\n        } });\r\n        this.mapInit2();\r\n      }\r\n    }\r\n    mapInit2 = () => {\r\n      setTimeout(() => {\r\n        const mapNode = document.getElementById(\"map-containerpoi\");\r\n        if (!mapNode) {\r\n          console.log(\"not find\");\r\n          return;\r\n        }\r\n        // eslint-disable-next-line\r\n        var map = new AMap.Map('map-containerpoi', {\r\n          zoom: 10\r\n        });\r\n        // eslint-disable-next-line\r\n        AMapUI.loadUI(['misc/PoiPicker'], (PoiPicker) => {\r\n\r\n          var poiPicker = new PoiPicker({\r\n              //city:'北京',\r\n              input: 'pickerInput1'\r\n          });\r\n  \r\n          //初始化poiPicker\r\n           // eslint-disable-next-line\r\n          var marker = new AMap.Marker();\r\n          poiPicker.on('poiPicked', (poiResult) => {\r\n            console.log(poiResult.item.location);\r\n            marker.setMap(map);\r\n            marker.setPosition(poiResult.item.location);\r\n            // const name = poiResult.item.name;\r\n            this.setState({\r\n              otherValues: {\r\n                ...this.state.otherValues,\r\n                longitude: poiResult.item.location.lng,\r\n                latitude: poiResult.item.location.lat,\r\n                // address: name\r\n              }\r\n            });\r\n          })\r\n        });\r\n      });\r\n    }\r\n    handleChange = key => info => {\r\n      console.log(\"info\", info);\r\n      if (info.file.status === \"done\") {\r\n        if (info.file.response.status === 1) {\r\n          message.success(\"上传成功\");\r\n          this.setState({\r\n            otherValues: {\r\n              ...this.state.otherValues,\r\n              [key]: info.file.response.data[0]\r\n            }\r\n          });\r\n        } else {\r\n          message.error(\"上传失败\");\r\n        }\r\n      }\r\n      if (info.file.status === \"error \") {\r\n        message.error(\"上传失败\");\r\n      }\r\n    };\r\n\r\n    onCreate = () => {\r\n      const { form } = this.props;\r\n      form.validateFields((err, values) => {\r\n        if (err) {\r\n          return;\r\n        }\r\n        console.log(values, this.state.otherValues);\r\n        console.log(this.state.otherValues);\r\n        this.props.onSubmit({ ...values, ...this.state.otherValues });\r\n      });\r\n    };\r\n    onChange = e => {\r\n      this.value = e.target.value;\r\n    };\r\n    addLabel = (key) => ()=> {\r\n      if (!this.value) {\r\n        message.error(\"请输入内容\");\r\n        return;\r\n      }\r\n  \r\n      const tmp = this.state.otherValues[key] ? this.state.otherValues[key].slice() : [];\r\n      tmp.push(this.value);\r\n      this.setState({\r\n        otherValues: {\r\n          ...this.state.otherValues,\r\n          [key]: tmp,\r\n        },\r\n      });\r\n    }\r\n    confirm = (content, key) => () => {\r\n      // const \r\n      const tmp = this.state.otherValues[key].filter(v => v !== content);\r\n      this.setState({\r\n        otherValues: {\r\n          ...this.state.otherValues,\r\n          [key]: tmp,\r\n        },\r\n      });\r\n    }\r\n    renderFormItem = value => {\r\n      const { appStatus } = store.getState();\r\n      const { getFieldDecorator } = this.props.form;\r\n      switch (value.type) {\r\n        case \"timePicker\":\r\n          return (\r\n            <Form.Item key={value.key} label={value.label}>\r\n              {getFieldDecorator(value.key, {\r\n                rules: value.rules,\r\n                initialValue: this.props.initData[value.key]\r\n              })(<TimePicker format=\"HH:mm\" />)}\r\n            </Form.Item>\r\n          );\r\n        case \"input\":\r\n          return (\r\n            <Form.Item key={value.key} label={value.label}>\r\n              {getFieldDecorator(value.key, {\r\n                rules: value.rules,\r\n                initialValue: this.props.initData[value.key]\r\n              })(<Input />)}\r\n            </Form.Item>\r\n          );\r\n        case \"treeSelect\":\r\n          return (\r\n            <Form.Item key={value.key} label={value.label}>\r\n              {getFieldDecorator(value.key, {\r\n                rules: value.rules,\r\n                initialValue: this.props.initData[value.key]\r\n              })(\r\n                <TreeSelect\r\n                  treeData={value.selectOptions}\r\n                  placeholder=\"请选择\"\r\n                  allowClear\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          );\r\n        case \"select\":\r\n          return (\r\n            <Form.Item key={value.key} label={value.label}>\r\n              {getFieldDecorator(value.key, {\r\n                rules: value.rules,\r\n                initialValue: this.props.initData[value.key]\r\n              })(\r\n                <Select placeholder=\"请选择\">\r\n                  {value.selectOptions.map(selectOption => (\r\n                    <Option key={selectOption.value} value={selectOption.value}>\r\n                      {selectOption.text}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          );\r\n        case \"cascader\": {\r\n          return (\r\n            <Form.Item key={value.key} label={value.label}>\r\n              {getFieldDecorator(value.key, {\r\n                rules: value.rules,\r\n                initialValue: this.props.initData[value.key]\r\n              })(\r\n                <Cascader\r\n                  fieldNames={value.fieldNames || fieldNamesCfg}\r\n                  options={value.selectOptions}\r\n                  placeholder=\"请选择\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          );\r\n        }\r\n        case \"upload\": {\r\n          return (\r\n            <Form.Item required key={value.key} label={value.label}>\r\n              <Upload\r\n                className=\"avatar-uploader\"\r\n                action={`${baseUrl}/upload`}\r\n                onChange={this.handleChange(value.key)}\r\n                headers={{ AccessToken: appStatus.token, }}\r\n                showUploadList={false}\r\n                beforeUpload={beforeUpload}\r\n                listType=\"picture-card\"\r\n              >\r\n                {this.state.otherValues[value.key] ? <img\r\n                alt=\"\"\r\n                src={this.state.otherValues[value.key]}\r\n                style={{  width: '100%' }}\r\n              /> : uploadButton}\r\n              </Upload>\r\n            </Form.Item>\r\n          );\r\n        }\r\n        case \"multipleSelect\":\r\n          return (\r\n            <Form.Item key={value.key} label={value.label}>\r\n              {getFieldDecorator(value.key, {\r\n                rules: value.rules,\r\n                initialValue: this.props.initData[value.key]\r\n              })(\r\n                <Select mode=\"multiple\" placeholder=\"请选择\">\r\n                  {value.selectOptions.map(selectOption => (\r\n                    <Option key={selectOption.value} value={selectOption.value}>\r\n                      {selectOption.text}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          );\r\n\r\n            case \"longitudelatitudepoi\":\r\n              return (\r\n                <div key=\"longitudelatitudepoi\" style={{ marginTop: '16px', marginBottom: '16px', }}>\r\n                  <Form.Item label=\"经纬度\">\r\n                    {this.state.otherValues.longitude} ,\r\n                    {this.state.otherValues.latitude}\r\n                  </Form.Item>\r\n                  {/* {this.state.otherValues.address && (\r\n                    <Form.Item label=\"地址\">\r\n                      {this.state.otherValues.address}\r\n                    </Form.Item>\r\n                  )} */}\r\n                  <div id=\"map-containerpoi\"></div>\r\n                  <div id=\"pickerBox\">\r\n                      <input id=\"pickerInput1\" placeholder=\"输入关键字选取地点\" />\r\n                  </div>\r\n                </div>\r\n              );\r\n              case \"braftEditor\": \r\n              return (\r\n                <Form.Item  key={value.key} label={value.label}>\r\n                {getFieldDecorator(value.key, {\r\n                  initialValue: BraftEditor.createEditorState(this.props.initData[value.key]),\r\n                  validateTrigger: 'onBlur',\r\n                  rules: [{\r\n                    required: true,\r\n                    validator: (_, value, callback) => {\r\n                      if (value.isEmpty()) {\r\n                        callback('请输入正文内容')\r\n                      } else {\r\n                        callback()\r\n                      }\r\n                    }\r\n                  }],\r\n                })(\r\n                  <BraftEditor\r\n                    className=\"my-editor\"\r\n                    // controls={controls}\r\n                    placeholder=\"请输入正文内容\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              )\r\n        case \"tagInput\": {\r\n          const tmp = this.state.otherValues[value.key] || [];\r\n          return (\r\n            <Form.Item  required key={value.key} label={value.label}>\r\n              <Input onChange={this.onChange} style={{ width: '200px', marginRight: '16px' }}/><Button onClick={this.addLabel(value.key)} type='primary'>添加</Button>\r\n              \r\n              <div style={{ marginTop: '8px' }}>{tmp.map(v => (\r\n                          <Popconfirm\r\n                          key={v}\r\n                          title=\"确定删除?\"\r\n                          onConfirm={this.confirm(v, value.key)}\r\n                          okText=\"确定\"\r\n                          cancelText=\"取消\"\r\n                        >\r\n                          <Button type=\"primary\" style={{ marginRight: \"8px\" }}>\r\n                            {v}\r\n                            <Icon type=\"close-circle\" />\r\n                          </Button>\r\n                        </Popconfirm>\r\n              ))}</div>\r\n            </Form.Item>\r\n          );\r\n        }\r\n        case \"default\":\r\n          return (\r\n            <Form.Item key={value.key} label={value.label}>\r\n              {value.defaultValue}\r\n            </Form.Item>\r\n          );\r\n        default:\r\n      }\r\n    };\r\n    render() {\r\n      const { visible, onCancel, title, formCfg, width } = this.props;\r\n      return (\r\n        <Modal\r\n          visible={visible}\r\n          title={title}\r\n          onCancel={onCancel}\r\n          onOk={this.onCreate}\r\n          width={width}\r\n        >\r\n          {visible && (\r\n            <Form {...formItemLayout} layout=\"vertical\">\r\n              {formCfg.map(this.renderFormItem)}\r\n            </Form>\r\n          )}\r\n        </Modal>\r\n      );\r\n    }\r\n  }\r\n);\r\n"],"sourceRoot":""}